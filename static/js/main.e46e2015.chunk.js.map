{"version":3,"sources":["fonts/azukiB.ttf","Util/Util.js","Progressions/Progressions.js","Progressions/ShellVoicings.js","Progressions/PitchClasses.js","Progressions/ProgressionGenerator.js","Progressions/Roots.js","Instruments/Bass/SubBass.js","Patterns/Bassline.js","Controllers/Basses.js","Instruments/Util/SampleLoader.js","Instruments/Guitar/Samples.js","Instruments/Guitar/Guitar.js","Instruments/Piano/Samples.js","Instruments/Piano/Piano.js","Controllers/Chords.js","Instruments/Drums/Samples.js","Instruments/Util/DrumSampleLoader.js","Instruments/Drums/Kicks.js","Instruments/Drums/Snares.js","Instruments/Drums/Open.js","Instruments/Drums/Closed.js","Instruments/Drums/Claps.js","Instruments/Drums/Percs.js","MagentaModels/Drums/VAE.js","Patterns/MidiMappings.js","Patterns/Drums.js","Controllers/Drums.js","MagentaModels/Melody/VAE.js","Progressions/MelodyCorrection.js","Controllers/Melody.js","Instruments/Vinyl/Vinyl.js","Controllers/Master.js","Components/Visualizer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","randEl","arr","Math","floor","random","length","prob","p","tonic1","tonic2","iiv","backdoor","generateTurnaround","turnaround","pushTonic","push","pushTension","pushFour","i","chords","1","dia","subWeight","subs","2","3","4","5","6","7","forms","applySubstitutions","section","map","c","chord","twoNote","threeNote","getFirstVoicing","bottom","shellType","oct","idx","shell","pitchClasses","n","Note","get","pc","pitchClassVoicing","o","voicing","midi","transpose","min","max","transposeBy","getVoicing","prev","dist","Interval","distance","invert","ProgressionGenerator","this","key","progression","form","generateProgression","updateChords","Key","majorKey","pcs","sections","reduce","a","b","concat","Progression","fromRomanNumerals","tonic","Chord","simplify","symbol","aliases","create","scales","fullName","extensions","shellVoicings","v","getShellVoicings","getChordNotes","center","fifthDist","root","pos","getRootsAndFifths","hpf","Tone","frequency","Q","type","lpf","sat","order","wet","vol","SubBass","synth","oscillator","envelope","attack","decay","sustain","release","chain","output","note","duration","time","triggerAttackRelease","BassController","instrument","bassline","sequence","on","rootsAndFifths","first","leadTo","measures","pattern","fifth","notes","s","leading","startIdx","indexOf","unshift","getBassline","updateSequence","dispose","trigger","start","humanize","path","samples","Object","keys","ltr","forEach","fileName","includes","replace","SampleLoader","process","Guitar","cb","preRvb","cmp","postRvb","preDelay","eq","lowFrequency","highFrequency","low","mid","high","sampler","Piano","ChordController","setReady","loadStatus","guitar","piano","init","updateLoadStatus","sw","hsf","loaded","t","value","claps","f","closed","open","kicks","percs","snares","Kicks","players","player","selected","state","restart","DrumSampleLoader","Snares","Open","Closed","Claps","rvb","Percs","model","mm","drumToMidi","Map","midiToDrum","e","reverse","visual","snare","kick","pitch","quantizedStartStep","quantizedEndStep","seq","totalQuantizedSteps","quantizationInfo","stepsPerQuarter","DrumController","setParts","models","tracks","drumPattern","part","vae","initialize","then","fseq","encode","z","decode","undefined","seq2","step","update","updatePart","loop","loopStart","loopEnd","correct","scalePair","sc1","scale","id","sc2","ns1","filter","ns2","constrainRange","alignToScale","ns","sc","nn","Midi","midiToNoteName","toMidi","nearest","name","octave","MelodyController","melody","voice","Promise","all","chordScales","updateInstrument","scalePairs","chordPairs","aProg","bProg","cProg","progs","seedProgs","sample","chordProgression","aSeq","bSeq","cSeq","seqs","seedSeqs","twoBars","seedSeq","seedProg","res","correctedNotes","allBars","concatenate","formatted","Vinyl","stop","lookAhead","bpm","Master","setInstrumentsReady","setPartsReady","pg","instrumentsLoaded","partsLoaded","instrumentLoadStatus","drums","vinyl","partLoadStatus","updateInstrumentLoadStatus","controller","ready","chainControllerOutputs","updatePartLoadStatus","toDestination","bc","cc","dc","mc","getChordScales","fft","Visualizer","props","useState","getValue","freqs","setFreqs","reqRef","useRef","animate","current","requestAnimationFrame","useEffect","audio","connect","cancelAnimationFrame","className","height","style","App","setInstrumentsLoaded","setPartsLoaded","setLoaded","playing","setPlaying","generatedFirst","setGeneratedFirst","master","disabled","onClick","play","generateSong","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e46e2015.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/azukiB.6f9ed360.ttf\";","const randEl = arr => arr[Math.floor(Math.random()*arr.length)];\r\nconst prob = p => Math.random() < p;\r\n\r\nexport {randEl, prob};","import {randEl, prob} from '../Util/Util';\r\n\r\nconst tonic1 = [1,3];\r\nconst tonic2 = [6,4];\r\nconst iiv = [2,5];\r\nconst backdoor = [4,7];\r\n\r\nconst generateTurnaround = () => {\r\n    const turnaround = [];\r\n\r\n    const pushTonic = () => { \r\n    turnaround.push(randEl(tonic1));\r\n        if(prob(0.85)){\r\n            turnaround.push(randEl(tonic2));\r\n        } else {\r\n            turnaround.push(turnaround[0]);\r\n        }\r\n    };\r\n\r\n    const pushTension = () => {\r\n        if(prob(0.6)) {\r\n            turnaround.push(iiv[0],iiv[1]);\r\n        } else {\r\n            turnaround.push(backdoor[0],backdoor[1]);\r\n        }\r\n    }\r\n\r\n    let pushFour = prob(0.5) ? \r\n    () => {\r\n        pushTonic();\r\n        pushTension();\r\n    } : () => {\r\n        pushTension();\r\n        pushTonic();\r\n    };\r\n\r\n    for(let i=0; i<2; i++) {\r\n        pushFour();\r\n    }\r\n    \r\n    return turnaround;\r\n}\r\n\r\nconst chords = {\r\n    1: {\r\n        dia:  'IM7',\r\n        subWeight: 0.33,\r\n        subs: ['IΔ9']\r\n    },\r\n    2: {\r\n        dia:  'IIm7',\r\n        subWeight: 0.15,\r\n        subs: ['IIm9','II7','II9','II7b9','bVIM7','bVIΔ9','#IVh7']\r\n    },\r\n    3: {\r\n        dia:  'IIIm7',\r\n        subWeight: 0.15,\r\n        subs: ['III7','III7b9','IIIh7',\r\n               '#Vo7']\r\n    },\r\n    4: {\r\n        dia:  'IVM7',\r\n        subWeight: 0.25,\r\n        subs: ['IVΔ9']\r\n    },\r\n    5: {\r\n        dia:  'V7',\r\n        subWeight: 0.3,\r\n        subs: ['V9','V7b9',\r\n               'bII7','bII9','bII7b9','bIIM7','bIIΔ9']\r\n    },\r\n    6: {\r\n        dia:  'VIm7',\r\n        subWeight: 0.6,\r\n        subs: ['VIm9','VI7','VI9','VI7b9',\r\n               'bVI7','bVI9','bVI7b9',\r\n               'bIIIM7','bIII7','bIII9','bIII7b9','bIIIo7',\r\n               'Io7','#Io7']\r\n    },\r\n    7: {\r\n        dia:  'VIIh7',\r\n        subWeight: 0.3,\r\n        subs: ['VII7','VII7b9','VIIo7',\r\n               'bVII7','bVII9','bVII7b9',\r\n               'IVm7','IVm9','IVmM7','IVmM9',\r\n               '#IIo7']\r\n    }\r\n}\r\n\r\nconst forms = [\r\n    [0,0,1,0],\r\n    [0,1,0,2]\r\n];\r\n\r\nconst generateForm = () => randEl(forms);\r\n\r\nconst generateProgression = (form) => {\r\n    const sections = [];\r\n    for(let i=0; i<3; i++) {\r\n        sections.push(generateTurnaround());\r\n    }\r\n\r\n    const progression = [];\r\n    for(let i=0; i<form.length; i++) {\r\n        progression.push(applySubstitutions(sections[form[i]]));\r\n    }\r\n\r\n    return progression.reduce((a,b) => a.concat(b), []);\r\n}\r\n\r\nconst applySubstitutions = section => section.map((c,i) => {\r\n        const chord = chords[c];\r\n        if(prob(chord.subWeight) && i!==0){\r\n            return randEl(chord.subs);\r\n        } else {\r\n            return chord.dia;\r\n        }\r\n});\r\n\r\nexport {generateProgression, generateForm};","import {Interval, Note} from '@tonaljs/tonal';\r\nimport {prob} from '../Util/Util';\r\n\r\nconst twoNote = {\r\n    4: [[1,3],[3,1]],\r\n    5: [[1,4],[4,1]],\r\n};\r\n\r\nconst threeNote = {\r\n    4: [[1,3,0],[3,1,2]],\r\n    5: [[1,3,4],[3,1,2]],\r\n};\r\n\r\nconst getShellVoicings = (chords, tonic, oct, extensions) => {\r\n    const bottom = Note.get(tonic+oct).midi;\r\n    const shellType = extensions ? threeNote : twoNote;\r\n    const shellVoicings = [getFirstVoicing(chords[0],bottom,shellType,oct)];\r\n    for(let i=1; i< chords.length; i++) {\r\n        const prev = shellVoicings[i-1];\r\n        shellVoicings.push(getVoicing(chords[i],bottom,shellType,prev));\r\n    }\r\n\r\n    return shellVoicings.map(v => v.voicing);\r\n}\r\n\r\nconst getFirstVoicing = (chord, bottom, shellType, oct) => {\r\n    const idx = prob(0.5) ? 0 : 1;\r\n    const shell = shellType[chord.length][idx];\r\n\r\n    const pitchClasses = chord.map(n => Note.get(n).pc);\r\n    const pitchClassVoicing = shell.map(i => pitchClasses[i]);\r\n\r\n    let o = oct;\r\n    let voicing = [pitchClassVoicing[0]+o];\r\n    for(let i=1; i<pitchClassVoicing.length; i++) {\r\n        voicing.push(pitchClassVoicing[i]+o);\r\n        while(Note.get(voicing[i]).midi < Note.get(voicing[i-1]).midi) {\r\n            voicing[i] = Note.transpose(voicing[i],'8P');\r\n            o++;\r\n        }\r\n    }\r\n\r\n    let min = Note.get(voicing[0]).midi;\r\n    let max = Note.get(voicing[voicing.length-1]).midi;\r\n    while (bottom > min) {\r\n        voicing = voicing.map(Note.transposeBy(\"8P\"));\r\n        min = Note.get(voicing[0]).midi;\r\n        max = Note.get(voicing[voicing.length-1]).midi;\r\n    }\r\n    while (max-bottom > 24) {\r\n        voicing = voicing.map(Note.transposeBy(\"-8P\"));\r\n        min = Note.get(voicing[0]).midi;\r\n        max = Note.get(voicing[voicing.length-1]).midi;\r\n    }\r\n    \r\n    return {chord: chord, voicing: voicing, idx: idx};\r\n}\r\n\r\nconst getVoicing = (chord, bottom, shellType, prev) => {\r\n    const dist = Interval.distance(chord[0],prev.chord[0]);\r\n    const idx = (dist === '4P' || Interval.invert(dist) === '4P') ? (!prev.idx ? 1 : 0) : prev.idx;\r\n    const shell = shellType[chord.length][idx];\r\n\r\n    const pitchClasses = chord.map(n => Note.get(n).pc);\r\n    const pitchClassVoicing = shell.map(i => pitchClasses[i]);\r\n\r\n    let oct = Note.get(prev.voicing[0]).oct;\r\n    let voicing = [pitchClassVoicing[0]+oct];\r\n    for(let i=1; i<pitchClassVoicing.length; i++) {\r\n        voicing.push(pitchClassVoicing[i]+oct);\r\n        while(Note.get(voicing[i]).midi < Note.get(voicing[i-1]).midi) {\r\n            voicing[i] = Note.transpose(voicing[i],'8P');\r\n            oct++;\r\n        }\r\n    }\r\n\r\n    let min = Note.get(voicing[0]).midi;\r\n    let max = Note.get(voicing[voicing.length-1]).midi;\r\n    while (bottom > min) {\r\n        voicing = voicing.map(Note.transposeBy(\"8P\"));\r\n        min = Note.get(voicing[0]).midi;\r\n        max = Note.get(voicing[voicing.length-1]).midi;\r\n    }\r\n    while (max-bottom > 24) {\r\n        voicing = voicing.map(Note.transposeBy(\"-8P\"));\r\n        min = Note.get(voicing[0]).midi;\r\n        max = Note.get(voicing[voicing.length-1]).midi;\r\n    }\r\n\r\n    return {chord: chord, voicing: voicing, idx: idx };\r\n}\r\n\r\nexport {getShellVoicings};","export default ['C','C#','D','D#','E','F','F#','G','G#','A','A#','B'];","import {Key, Progression, Chord, Note} from '@tonaljs/tonal';\r\nimport {chord} from 'sharp11';\r\nimport {generateProgression, generateForm} from './Progressions';\r\nimport {getShellVoicings} from './ShellVoicings';\r\nimport {getRootsAndFifths} from './Roots';\r\nimport {randEl} from '../Util/Util';\r\nimport pcs from './PitchClasses';\r\n\r\nclass ProgressionGenerator {\r\n    constructor() {\r\n        this.key = {};\r\n        this.progression = [];\r\n        this.chords = [];\r\n        this.form = [];\r\n        this.generateProgression();\r\n        this.updateChords();\r\n    }\r\n\r\n    generateProgression() {\r\n        this.key = Key.majorKey(randEl(pcs));\r\n        this.form = generateForm();\r\n        this.progression = generateProgression(this.form);\r\n        this.updateChords();\r\n    }\r\n\r\n    updateChords() {\r\n        this.chords = Progression\r\n            .fromRomanNumerals(this.key.tonic,this.progression)\r\n            .map(c => Chord.get(c))\r\n            .map(c => {\r\n                const tonic = Note.simplify(c.tonic) \r\n                let symbol = c.aliases[0];\r\n                if(symbol === \"maj7\") {\r\n                    symbol = \"M7\";\r\n                }\r\n                if(symbol === \"dim7\") {\r\n                    symbol = \"o7\";\r\n                }\r\n                return tonic + symbol;\r\n            });\r\n    }\r\n\r\n    getChordScales() {\r\n        return this.chords.map(c => chord.create(c).scales());\r\n    }\r\n\r\n    getChordNotes(oct) {\r\n        return this.chords.map(c => chord.create(c,oct).chord.map(n => Note.simplify(n.fullName)));\r\n    }\r\n\r\n    getShellVoicings(oct, extensions) {\r\n        return getShellVoicings(this.getChordNotes(), this.key.tonic, oct, extensions);\r\n    }\r\n\r\n    getRootsAndFifths(oct) {\r\n        return getRootsAndFifths(this.getChordNotes(),this.key.tonic, oct);\r\n    }\r\n}\r\n\r\nexport default ProgressionGenerator;","import {Note, Interval} from '@tonaljs/tonal';\r\nimport {prob} from '../Util/Util';\r\n\r\nconst getRootsAndFifths = (chords, tonic, oct) => {\r\n    const center = Note.get(tonic+oct).midi;\r\n    return chords.map(chord => {\r\n        const fifthDist = Interval.distance(chord[0],chord[2]);\r\n        const pc = Note.get(chord[0]).pc;\r\n        let root = pc+oct;\r\n        let pos = Note.get(root).midi;\r\n        // all roots above center\r\n        while(pos<center) {\r\n            root = Note.transpose(root,\"8P\");\r\n            pos = Note.get(root).midi;\r\n        }\r\n        // all roots no more than an octave above center\r\n        while(pos-center>12) {\r\n            root = Note.transpose(root,\"-8P\");\r\n            pos = Note.get(root).midi;\r\n        }\r\n        // roots past the fifth can be below center\r\n        if(pos-center>6 && prob(0.5)) {\r\n            root = Note.transpose(root,\"-8P\");\r\n            pos = Note.get(root).midi;\r\n        }\r\n        return [root, Note.transpose(root,fifthDist)];\r\n    });\r\n}\r\n\r\n\r\n\r\nexport {getRootsAndFifths};","import * as Tone from 'tone';\r\n\r\nconst hpf = new Tone.Filter({\r\n    frequency: 28,\r\n    Q: 0.5,\r\n    type: 'highpass',\r\n});\r\n\r\nconst lpf = new Tone.Filter({\r\n    frequency: 120,\r\n    Q: 0.5,\r\n    type: 'lowpass',\r\n});\r\n\r\nconst sat = new Tone.Chebyshev({\r\n    order: 2,\r\n    wet: 0.2\r\n});\r\n\r\nconst vol = new Tone.Volume(-40);\r\n\r\nclass SubBass {\r\n    constructor() {\r\n        this.synth = new Tone.MonoSynth({\r\n            oscillator: {\r\n                type: 'sine',\r\n            },\r\n            envelope: {\r\n                attack : 0.1,\r\n                decay: 0.15,\r\n                sustain: 0.75,\r\n                release: 1.5\r\n            }\r\n        }).chain(hpf, lpf, sat, vol);\r\n        this.output = vol;\r\n    }\r\n\r\n    trigger(note, duration, time) {\r\n        this.synth.triggerAttackRelease(note, duration, Tone.Time(time) + Tone.Time('32n'));\r\n    }\r\n}\r\n\r\nexport default SubBass;","import {Note} from '@tonaljs/tonal';\r\nimport {randEl} from '../Util/Util';\r\n\r\nconst a = [\r\n//    1   e   &   a   2   e   &   a\r\n    ['1',' ','.','1',' ','.',' ',' '],\r\n    [' ',' ',' ','1',' ','.','1',' '],\r\n];\r\n\r\nconst b = [\r\n//    3   e   &   a   4   e   &   a\r\n    [' ',' ',' ',' ',' ','L',' ',' '],\r\n    [' ',' ',' ',' ','1','L',' ',' '],\r\n];\r\n\r\nconst getPattern = () => [...randEl(a), ...randEl(b)];\r\nconst oct = n => Note.transpose(n,'8P'); \r\n\r\nconst getBassline = (rootsAndFifths) => {\r\n    const first = randEl([rootsAndFifths[0][0],oct(rootsAndFifths[0][0])]);\r\n    let leadTo = first;\r\n\r\n    const measures = [];\r\n    for(let i=rootsAndFifths.length-1; i>=0; i--) {\r\n        const pattern = getPattern();\r\n        const [root,fifth] = rootsAndFifths[i];\r\n        const notes = [];\r\n\r\n        for(let s=0; s<pattern.length; s++) {\r\n            const symbol = pattern[s];\r\n            const leading = randEl([Note.transpose(leadTo,'2m'),Note.transpose(leadTo,'-2m')]);\r\n            let note;\r\n            switch(symbol) {\r\n                case '1': note = randEl([root,oct(root)]); break;\r\n                case 'L': note = randEl([root,fifth,leading]); break;\r\n                default : note = 0; break;\r\n            }\r\n            if(note!==0)\r\n                note = Note.simplify(note);\r\n            notes.push(note);\r\n        }\r\n\r\n        const startIdx = pattern.indexOf('1');\r\n        if(i===0) notes[startIdx] = first;\r\n        leadTo = notes[startIdx];\r\n\r\n        measures.unshift(notes);\r\n    }\r\n    return measures.reduce((a,b) => a.concat(b), []);\r\n};\r\n\r\nexport {getBassline};\r\n","import * as Tone from 'tone';\r\nimport SubBass from '../Instruments/Bass/SubBass';\r\nimport {getBassline} from '../Patterns/Bassline';\r\n\r\nclass BassController {\r\n    constructor() {\r\n        this.instrument = new SubBass();\r\n        this.output = this.instrument.output;\r\n        this.bassline = [];\r\n        this.sequence = new Tone.Sequence();\r\n        this.on = true;\r\n    }\r\n\r\n    update(rootsAndFifths) {\r\n        this.bassline = getBassline(rootsAndFifths);\r\n        this.updateSequence();\r\n    }\r\n\r\n    updateSequence() {\r\n        this.sequence.dispose();\r\n        this.sequence = new Tone.Sequence((time,note) => {\r\n            if(note!==0 && this.on) {\r\n                this.instrument.trigger(note, \"2n\", time);\r\n            }\r\n        },this.bassline,'16n').start(0);\r\n        \r\n        this.sequence.humanize = true;\r\n    }\r\n}\r\n\r\nexport default BassController;","export default (path, notes) => {\r\n    const samples = {};\r\n    const keys = Object.keys(notes)\r\n        .map(ltr => notes[ltr].map(oct => ltr+oct))\r\n        .reduce((a,b) => a.concat(b), []);\r\n    \r\n    keys.forEach(note => {\r\n        const fileName = note.includes(\"#\") ? note.replace(\"#\",\"s\") : note;\r\n        samples[note] = path+fileName+\".mp3\";\r\n    });\r\n\r\n    return samples;\r\n}","import SampleLoader from '../Util/SampleLoader';\r\nconst path = `${process.env.PUBLIC_URL}/Samples/Guitar/`;\r\nconst notes = {\r\n    \"A\":    [2,3,4],\r\n    \"A#\":   [2,3,4],\r\n    \"B\":    [2,3,4],\r\n    \"C\":    [3,6],\r\n    \"C#\":   [3],\r\n    \"D\":    [3,4,5],\r\n    \"D#\":   [3,4,5],\r\n    \"E\":    [2,3,4,5],\r\n    \"F\":    [2,3,4],\r\n    \"F#\":   [2,3,4],\r\n    \"G\":    [2,3,4],\r\n    \"G#\":   [2,3,4],\r\n};\r\n\r\nconst samples = SampleLoader(path,notes);\r\n\r\nexport {samples};","import * as Tone from 'tone';\r\nimport {samples} from './Samples'; \r\n\r\nclass Guitar {\r\n    constructor(cb) {\r\n        const preRvb = new Tone.Reverb({\r\n            decay: 1.5,\r\n            wet: 0.6\r\n        });\r\n        const sat = new Tone.Chebyshev({\r\n            order: 9,\r\n            wet: 0.2\r\n        });\r\n        const cmp = new Tone.Compressor(-12,4);\r\n        const lpf = new Tone.Filter({\r\n            frequency: 1200,\r\n            Q: 0.5,\r\n            type: 'lowpass',\r\n        });\r\n        const vol = new Tone.Volume(-1);\r\n        const postRvb = new Tone.Reverb({\r\n            decay: 6,\r\n            preDelay: 0.2,\r\n            wet: 0.15,\r\n        });\r\n        const eq = new Tone.EQ3({\r\n                lowFrequency: 690,\r\n                highFrequency: 2400,\r\n                low:  0,\r\n                mid:  -6,\r\n                high: 6,\r\n        });\r\n        this.sampler = new Tone.Sampler(samples, () => cb());\r\n        this.output = new Tone.Gain(1);\r\n        this.sampler.chain(eq, preRvb, sat, lpf, cmp, postRvb, vol, this.output);\r\n    }\r\n\r\n    trigger(note, duration, time) {\r\n        this.sampler.triggerAttackRelease(note, duration, time);\r\n    }\r\n}\r\n\r\nexport default Guitar;","import SampleLoader from '../Util/SampleLoader';\r\nconst path = `${process.env.PUBLIC_URL}/Samples/Piano/`;\r\nconst notes = {\r\n    \"A\":    [1,2,3,4,5,6],\r\n    \"C\":    [1,2,3,4,5,6],\r\n    \"D#\":   [1,2,3,4,5,6],\r\n    \"F#\":   [1,2,3,4,5,6],\r\n};\r\nconst samples = SampleLoader(path, notes)\r\nexport {samples};","import * as Tone from 'tone';\r\nimport {samples} from './Samples'; \r\n\r\nclass Piano {\r\n    constructor(cb) {\r\n        const cmp = new Tone.Compressor(-12,4);\r\n        const postRvb = new Tone.Reverb({\r\n            decay: 2.22,\r\n            preDelay: 0.33,\r\n            wet: 0.11\r\n        });\r\n        const lpf = new Tone.Filter({\r\n            frequency: 2400,\r\n            Q: 0.5,\r\n            type: 'lowpass',\r\n        });\r\n        const eq = new Tone.EQ3({\r\n            lowFrequency:200,\r\n            highFrequency:700,\r\n            low:0, \r\n            mid: -1, \r\n            high: 0\r\n        });\r\n        const vol = new Tone.Volume(-1);\r\n        this.sampler = new Tone.Sampler(samples, () => cb());\r\n        this.output = new Tone.Gain(1);\r\n        this.sampler.chain(lpf, cmp, postRvb, eq, vol, this.output);\r\n    }\r\n\r\n    trigger(note, duration, time) {\r\n        this.sampler.triggerAttackRelease(note, duration, Tone.Time(time) + Tone.Time('32n'));\r\n    }\r\n}\r\n\r\nexport default Piano;","import * as Tone from 'tone';\r\nimport Guitar from '../Instruments/Guitar/Guitar';\r\nimport Piano from '../Instruments/Piano/Piano';\r\nimport {prob} from '../Util/Util';\r\n\r\nclass ChordController {\r\n    constructor(setReady) {\r\n        this.setReady = setReady;\r\n        this.loadStatus = {\r\n            guitar: false,\r\n            piano: false\r\n        }\r\n        this.instrument = {};\r\n        this.output = new Tone.Gain(1);\r\n        this.chords = [];\r\n        this.sequence = new Tone.Sequence();\r\n        this.init();\r\n        this.on = true;\r\n    }\r\n\r\n    init() {\r\n        this.guitar = new Guitar(this.updateLoadStatus('guitar'));\r\n        this.piano = new Piano(this.updateLoadStatus('piano'));\r\n        const sw = new Tone.StereoWidener(0.67);\r\n        const hsf = new Tone.Filter(200,'highshelf');\r\n        this.guitar.output.chain(hsf,sw,this.output);\r\n        this.piano.output.chain(hsf,sw,this.output);\r\n    }\r\n\r\n    updateLoadStatus(type) {\r\n        this.loadStatus[type] = true;\r\n        let loaded = true;\r\n        for(const t in this.loadStatus) {\r\n            loaded = this.loadStatus[t] && loaded;\r\n        }\r\n        this.setReady('chords', loaded);\r\n    }\r\n\r\n    update(chords) {\r\n        this.chords = chords;\r\n        this.instrument = prob(0.5) ? this.guitar : this.piano;\r\n        this.updateSequence();\r\n    }\r\n\r\n    updateSequence() {\r\n        this.sequence.dispose();\r\n        this.sequence = new Tone.Sequence((time,value) => {\r\n            if(this.on) {\r\n                value.chord.forEach((note,i) => {\r\n                    this.instrument.trigger(note, \"1m\", Tone.Time(time) + Tone.Time(0.015*i));\r\n                });\r\n            }\r\n        },this.chords.map(chord => {return {chord: chord}}),'1m').start(0);\r\n        \r\n        this.sequence.humanize = true;\r\n    }\r\n}\r\n\r\nexport default ChordController;","const claps = [\r\n    'Cymatics - Lofi Clap 1.wav',\r\n    'Cymatics - Lofi Clap 2.wav',\r\n    'Cymatics - Lofi Clap 3.wav',\r\n    'Cymatics - Lofi Clap 4.wav',\r\n    'Cymatics - Lofi Clap 6.wav',\r\n    'bubbleclap.wav',\r\n    'bubbleclap2.wav',\r\n    'clap1.wav',\r\n    'clapp.wav',\r\n].map(f => `${process.env.PUBLIC_URL}/Samples/Drums/claps/${f}`);\r\n\r\nconst closed = [\r\n    'Cymatics - Lofi Closed Hihat 1.wav',\r\n    'Cymatics - Lofi Closed Hihat 2.wav',\r\n    'Cymatics - Lofi Closed Hihat 3.wav',\r\n    'Cymatics - Lofi Closed Hihat 4.wav',\r\n    'Cymatics - Lofi Closed Hihat 5.wav',\r\n    'hat.wav',\r\n    'Oversampled_dd_hihat_01.wav',\r\n    'Oversampled_dd_hihat_02.wav',\r\n    'Oversampled_dd_hihat_03.wav',\r\n    'Oversampled_dd_hihat_04.wav',\r\n    'Oversampled_dd_hihat_05.wav',\r\n].map(f => `${process.env.PUBLIC_URL}/Samples/Drums/closed/${f}`);\r\n\r\nconst open = [\r\n    'Cymatics - Lofi Open Hihat 1.wav',\r\n    'Cymatics - Lofi Open Hihat 2.wav',\r\n    'Cymatics - Lofi Open Hihat 3.wav',\r\n    'Cymatics - Lofi Open Hihat 4.wav',\r\n    'Cymatics - Lofi Open Hihat 5.wav',\r\n].map(f => `${process.env.PUBLIC_URL}/Samples/Drums/open/${f}`);\r\n\r\nconst kicks = [\r\n    'Oversampled_dd_kick_01.wav',\r\n    'Oversampled_dd_kick_02.wav',\r\n    'Oversampled_dd_kick_03.wav',\r\n    'Oversampled_dd_kick_04.wav',\r\n    'Oversampled_dd_kick_05.wav',\r\n    'weirdkick.wav',\r\n].map(f => `${process.env.PUBLIC_URL}/Samples/Drums/kicks/${f}`);\r\n\r\nconst percs = [\r\n    'Cymatics - Lofi Percussion 1.wav',\r\n    'Cymatics - Lofi Percussion 2.wav',\r\n    'Cymatics - Lofi Percussion 3.wav',\r\n    'Cymatics - Lofi Percussion 4.wav',\r\n    'Cymatics - Lofi Percussion 5.wav',\r\n    'Cymatics - Lofi Percussion 6.wav',\r\n    'Cymatics - Lofi Percussion 7.wav',\r\n    'Cymatics - Lofi Percussion 8.wav',\r\n    'paaaah.wav',\r\n    'paah.wav',\r\n    'pluip.wav',\r\n    'scrchpt.wav',\r\n    'scrshhrrttt.wav',\r\n    'scrshht.wav',\r\n    'tic.wav',\r\n    'ting.wav',\r\n].map(f => `${process.env.PUBLIC_URL}/Samples/Drums/percs/${f}`);\r\n\r\nconst snares = [\r\n    'Cymatics - Lofi Snare 14 - A.wav',\r\n    'Oversampled_dd_snare_01.wav',\r\n    'Oversampled_dd_snare_02.wav',\r\n    'Oversampled_dd_snare_03.wav',\r\n    'Oversampled_dd_snare_04.wav',\r\n    'Oversampled_dd_snare_05.wav',\r\n    'snare.wav',\r\n].map(f => `${process.env.PUBLIC_URL}/Samples/Drums/snares/${f}`);\r\n\r\nexport {claps, kicks, open, closed, percs, snares};","export default (arr) => {\r\n    const samples = {};\r\n    arr.forEach((f,i) => samples[i] = f);\r\n    return samples;\r\n}","import * as Tone from 'tone';\r\nimport {kicks} from './Samples';\r\nimport DrumSampleLoader from '../Util/DrumSampleLoader';\r\nimport {randEl} from '../../Util/Util';\r\n\r\nconst hpf = new Tone.Filter({\r\n    frequency: 28,\r\n    Q: 0.5,\r\n    type: 'highpass',\r\n});\r\nconst vol = new Tone.Volume(-16);\r\n\r\nclass Kicks {\r\n    constructor(cb) {\r\n        this.samples = DrumSampleLoader(kicks);\r\n        this.players = new Tone.Players(this.samples, () => cb());\r\n        this.selected = 0;\r\n        this.output = new Tone.Gain(1);\r\n        this.players.chain(hpf, vol, this.output);\r\n    }\r\n\r\n    trigger = (time) => {\r\n        this.players.player(this.selected).state === 'started' ? \r\n        this.players.player(this.selected).restart(time) : \r\n        this.players.player(this.selected).start(time);\r\n    }\r\n\r\n    update() {\r\n        this.selected = randEl(Object.keys(this.samples));\r\n    }\r\n}\r\n\r\nexport default Kicks;","import * as Tone from 'tone';\r\nimport {snares} from './Samples';\r\nimport DrumSampleLoader from '../Util/DrumSampleLoader';\r\nimport {randEl} from '../../Util/Util';\r\n\r\nconst vol = new Tone.Volume(-16);\r\n\r\nclass Snares {\r\n    constructor(cb) {\r\n        this.samples = DrumSampleLoader(snares);\r\n        this.players = new Tone.Players(this.samples, () => cb());\r\n        this.selected = 0;\r\n        this.output = new Tone.Gain(1);\r\n        this.players.chain(vol, this.output);\r\n    }\r\n\r\n    trigger = (time) => {\r\n        this.players.player(this.selected).state === 'started' ? \r\n        this.players.player(this.selected).restart(time) : \r\n        this.players.player(this.selected).start(time);\r\n    }\r\n\r\n    update() {\r\n        this.selected = randEl(Object.keys(this.samples));\r\n    }\r\n}\r\n\r\nexport default Snares;","import * as Tone from 'tone';\r\nimport {open} from './Samples';\r\nimport DrumSampleLoader from '../Util/DrumSampleLoader';\r\nimport {randEl} from '../../Util/Util';\r\n\r\nconst vol = new Tone.Volume(-32);\r\n\r\nclass Open {\r\n    constructor(cb) {\r\n        this.samples = DrumSampleLoader(open);\r\n        this.players = new Tone.Players(this.samples, () => cb());\r\n        this.selected = 0;\r\n        this.output = new Tone.Gain(1);\r\n        this.players.chain(vol, this.output);\r\n    }\r\n\r\n    trigger = (time) => {\r\n        this.players.player(this.selected).state === 'started' ? \r\n        this.players.player(this.selected).restart(time) : \r\n        this.players.player(this.selected).start(time);\r\n    }\r\n\r\n    update() {\r\n        this.selected = randEl(Object.keys(this.samples));\r\n    }\r\n}\r\n\r\nexport default Open;","import * as Tone from 'tone';\r\nimport {closed} from './Samples';\r\nimport DrumSampleLoader from '../Util/DrumSampleLoader';\r\nimport {randEl} from '../../Util/Util';\r\n\r\nconst vol = new Tone.Volume(-36);\r\n\r\nclass Closed {\r\n    constructor(cb) {\r\n        this.samples = DrumSampleLoader(closed);\r\n        this.players = new Tone.Players(this.samples, () => cb());\r\n        this.selected = 0;\r\n        this.output = new Tone.Gain(1);\r\n        this.players.chain(vol, this.output);\r\n    }\r\n\r\n    trigger = (time) => {\r\n        this.players.player(this.selected).state === 'started' ? \r\n        this.players.player(this.selected).restart(time) : \r\n        this.players.player(this.selected).start(time);\r\n    }\r\n\r\n    update() {\r\n        this.selected = randEl(Object.keys(this.samples));\r\n    }\r\n}\r\n\r\nexport default Closed;","import * as Tone from 'tone';\r\nimport {claps} from './Samples';\r\nimport DrumSampleLoader from '../Util/DrumSampleLoader';\r\nimport {randEl} from '../../Util/Util';\r\n\r\nconst vol = new Tone.Volume(-16);\r\n\r\nclass Claps {\r\n    constructor(cb) {\r\n        this.samples = DrumSampleLoader(claps);\r\n        this.players = new Tone.Players(this.samples, () => cb());\r\n        this.selected = 0;\r\n        this.output = new Tone.Gain(1);\r\n        this.players.chain(vol, this.output);\r\n    }\r\n\r\n    trigger = (time) => {\r\n        this.players.player(this.selected).state === 'started' ? \r\n        this.players.player(this.selected).restart(time) : \r\n        this.players.player(this.selected).start(time);\r\n    }\r\n\r\n    update() {\r\n        this.selected = randEl(Object.keys(this.samples));\r\n    }\r\n}\r\n\r\nexport default Claps;","import * as Tone from 'tone';\r\nimport {percs} from './Samples';\r\nimport DrumSampleLoader from '../Util/DrumSampleLoader';\r\nimport {randEl} from '../../Util/Util';\r\n\r\nconst rvb = new Tone.Reverb({\r\n    decay: 1,\r\n    wet: 0.2\r\n});\r\nconst cmp = new Tone.Compressor(-12,4);\r\nconst vol = new Tone.Volume(-24);\r\n\r\nclass Percs {\r\n    constructor(cb) {\r\n        this.samples = DrumSampleLoader(percs);\r\n        this.players = new Tone.Players(this.samples, () => cb());\r\n        this.output = new Tone.Gain(1);\r\n        this.players.chain(cmp, rvb, vol, this.output);\r\n    }\r\n\r\n    trigger = (time) => {\r\n        const selected = randEl(Object.keys(this.samples));\r\n        if(this.players.player(selected).state === 'stopped') {\r\n            this.players.player(selected).restart(time);\r\n        }\r\n    }\r\n\r\n    update() {}\r\n}\r\n\r\nexport default Percs;","import * as mm from '@magenta/music';\r\n\r\nconst modelURL = 'https://storage.googleapis.com/magentadata/js/checkpoints/music_vae/drums_4bar_med_q2';\r\nconst model = new mm.MusicVAE(modelURL);\r\n\r\nexport default model;","const drumToMidi = new Map([\r\n    ['kick', 36],\r\n    ['snare', 38],\r\n    ['closed', 42],\r\n    ['open', 46],\r\n]);\r\n\r\nconst midiToDrum = new Map([...drumToMidi].map(e => e.reverse()));\r\n\r\nexport{drumToMidi, midiToDrum};","import {drumToMidi} from './MidiMappings';\r\nconst visual = {\r\n    //           1   e   &   a   2   e   &   a   3   e   &   a   4   e   &   a       1   e   &   a   2   e   &   a   3   e   &   a   4   e   &   a\r\n    open:   [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' ',    ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X',' '],\r\n    closed: ['X',' ','X',' ','X',' ','X',' ','X',' ','X',' ','X',' ','X',' ',    'X',' ','X',' ','X',' ','X',' ','X',' ','X',' ','X',' ','X',' '],\r\n    snare:  [' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' ',    ' ',' ',' ',' ','X',' ',' ',' ',' ',' ',' ',' ','X',' ',' ',' '],\r\n    kick:   ['X',' ',' ',' ',' ',' ',' ','X','X',' ',' ',' ',' ',' ',' ',' ',    'X',' ',' ',' ',' ',' ','X',' ',' ','X','X',' ',' ',' ',' ',' '],\r\n}\r\n\r\nconst notes = [];\r\nObject.keys(visual).forEach(t => visual[t].forEach((n,i) => {\r\n    if(n === 'X') {\r\n        notes.push({\r\n            pitch: drumToMidi.get(t),\r\n            quantizedStartStep: i,\r\n            quantizedEndStep: i+1\r\n        });\r\n    }\r\n}));\r\n\r\nconst seq = {\r\n    notes: notes,\r\n    totalQuantizedSteps: 32,\r\n    quantizationInfo: {stepsPerQuarter: 4}\r\n};\r\n\r\nexport default seq;","import * as Tone from 'tone';\r\nimport {Kicks, Snares, Open, Closed, Claps, Percs} from '../Instruments/Drums/Drums';\r\nimport vae from '../MagentaModels/Drums/VAE';\r\nimport pattern from '../Patterns/Drums';\r\nimport { midiToDrum } from '../Patterns/MidiMappings';\r\n\r\nclass DrumController {\r\n    constructor(setReady,setParts) {\r\n        this.setParts = setParts;\r\n        this.setReady = setReady;\r\n        this.loadStatus = {\r\n            kicks: false,\r\n            snares: false,\r\n            open: false,\r\n            closed: false,\r\n            claps: false,\r\n            percs: false,\r\n            models: false\r\n        };\r\n        this.tracks = {\r\n            kicks: true,\r\n            snares: true,\r\n            closed: true,\r\n            open: true,\r\n            claps: true,\r\n            percs: true,\r\n        }\r\n        this.output = new Tone.Gain(1);\r\n        this.drumPattern = [];\r\n        this.part = new Tone.Part();\r\n        this.init();\r\n        this.on = true;\r\n    }\r\n\r\n    init() {\r\n        vae.initialize().then(() => this.updateLoadStatus('models'));\r\n        this.kicks = new Kicks(this.updateLoadStatus('kicks'));\r\n        this.snares = new Snares(this.updateLoadStatus('snares'));\r\n        this.open = new Open(this.updateLoadStatus('open'));\r\n        this.closed = new Closed(this.updateLoadStatus('closed'));\r\n        this.claps = new Claps(this.updateLoadStatus('claps'));\r\n        this.percs = new Percs(this.updateLoadStatus('percs'));\r\n        this.kicks.output.chain(this.output);\r\n        this.snares.output.chain(this.output);\r\n        this.open.output.chain(this.output);\r\n        this.closed.output.chain(this.output);\r\n        this.claps.output.chain(this.output);\r\n        this.percs.output.chain(this.output);\r\n    }\r\n\r\n    updateLoadStatus(type) {\r\n        this.loadStatus[type] = true;\r\n        let loaded = true;\r\n        for(const t in this.loadStatus) {\r\n            loaded = this.loadStatus[t] && loaded;\r\n        }\r\n        this.setReady('drums', loaded);\r\n    }\r\n    \r\n    async update() {\r\n        this.setParts('drums',false);\r\n        const fseq = [];\r\n        let z = await vae.encode([pattern]);\r\n        const seq = await vae.decode(z, 1.2, undefined, 4, 80);\r\n        const seq2 = await vae.decode(z, 1.4, undefined, 4, 80);\r\n        seq[0].notes.forEach(n => {\r\n            fseq.push([{\"16n\": n.quantizedStartStep},midiToDrum.get(n.pitch)]);\r\n        });\r\n        seq2[0].notes.forEach((n,i) => {\r\n            const step = n.quantizedStartStep+32;\r\n            if(step<64)\r\n                fseq.push([{\"16n\": step},midiToDrum.get(n.pitch)]);\r\n        });\r\n        this.drumPattern = fseq;\r\n\r\n        this.kicks.update();\r\n        this.snares.update();\r\n        this.open.update();\r\n        this.claps.update();\r\n        this.claps.update();\r\n        this.percs.update();\r\n        \r\n        this.updatePart();\r\n        this.setParts('drums',true);\r\n    }\r\n\r\n    updatePart() {\r\n        this.part.dispose();\r\n        this.part = new Tone.Part((time,type) => {\r\n            const t = Tone.Time(time) + Tone.Time('32n');\r\n            if(this.on) {\r\n                switch(type) {\r\n                    case 'kick': {\r\n                        if(this.tracks.kicks)\r\n                            this.kicks.trigger(t);\r\n                        break;\r\n                    }\r\n                    case 'snare': {\r\n                        if(this.tracks.snares)\r\n                            this.snares.trigger(t);\r\n                        if(this.tracks.claps)\r\n                            this.claps.trigger(t);\r\n                        break;\r\n                    }\r\n                    case 'closed': {\r\n                        if(this.tracks.closed)\r\n                            this.closed.trigger(t);\r\n                        break;\r\n                    }\r\n                    case 'open': {\r\n                        if(this.tracks.open)\r\n                            this.open.trigger(t);\r\n                        break;\r\n                    }\r\n                    default: break;\r\n                }\r\n                if(Math.random()<0.2 && this.tracks.percs) {\r\n                    this.percs.trigger(t);\r\n                }\r\n            }\r\n        },this.drumPattern).start(0);\r\n        this.part.loop = true;\r\n        this.part.loopStart = 0;\r\n        this.part.loopEnd = '4m';\r\n        this.part.humanize = true;\r\n    }\r\n}\r\n\r\nexport default DrumController;","import * as mm from '@magenta/music';\r\n\r\nconst modelURL = 'https://storage.googleapis.com/magentadata/js/checkpoints/music_vae/mel_chords';\r\nconst model = new mm.MusicVAE(modelURL);\r\n\r\nexport default model;","import {Midi, Note} from '@tonaljs/tonal'; \r\nimport {note, scale} from 'sharp11';\r\n\r\nconst correct = (notes, scalePair) => {\r\n    const sc1 = scale.create(scalePair[0].key.fullName,scalePair[0].id);\r\n    const sc2 = scale.create(scalePair[1].key.fullName,scalePair[1].id);\r\n    const ns1 = notes.filter(n => n.quantizedStartStep < 16);\r\n    const ns2 = notes.filter(n => n.quantizedStartStep >= 16);\r\n    return constrainRange([...alignToScale(ns1,sc1),...alignToScale(ns2,sc2)]);\r\n}\r\n\r\nconst alignToScale = (ns, sc) => {\r\n    return ns.map(n => {\r\n        const nn = note.create(Midi.midiToNoteName(n.pitch));\r\n        return {\r\n            ...n,\r\n            pitch: Midi.toMidi(Note.simplify(sc.nearest(nn.name).fullName + nn.octave))\r\n        };\r\n    });\r\n}\r\n\r\nconst constrainRange = (notes) => {\r\n    const oct = 12;\r\n    return notes.map(note => {\r\n        let p = note.pitch;\r\n\r\n        while(p < 54) {\r\n            p+=oct;\r\n        }\r\n        while(p > 77) {\r\n            p-=oct;\r\n        }\r\n\r\n        return {...note, pitch: p};\r\n    });\r\n}\r\n\r\nconst format = (notes) => {\r\n    return notes.map(n => {\r\n        return {\r\n            time: {'16n': n.quantizedStartStep},\r\n            note: Midi.midiToNoteName(n.pitch),\r\n            duration: {'16n': n.quantizedEndStep - n.quantizedStartStep},\r\n        };\r\n    });\r\n}\r\n\r\nexport {correct, format};","import * as Tone from 'tone';\r\nimport * as mm from '@magenta/music';\r\nimport {Note} from '@tonaljs/tonal';\r\nimport vae from '../MagentaModels/Melody/VAE';\r\nimport Piano from '../Instruments/Piano/Piano';\r\nimport Guitar from '../Instruments/Guitar/Guitar';\r\nimport {prob} from '../Util/Util';\r\nimport {correct, format} from '../Progressions/MelodyCorrection';\r\n\r\nclass MelodyController {\r\n    constructor(setReady, setParts) {\r\n        this.setReady = setReady;\r\n        this.setParts = setParts;\r\n        this.loadStatus = {\r\n            guitar: false,\r\n            piano: false,\r\n        };\r\n        this.instrument = {};\r\n        this.output = new Tone.Gain(1);\r\n        this.melody = [];\r\n        this.part = new Tone.Part();\r\n        this.init();\r\n        this.on = true;\r\n        this.voice = 0;\r\n    }\r\n\r\n    init() {\r\n        Promise.all([\r\n            vae.initialize(), \r\n        ]).then(() => this.updateLoadStatus('models'));\r\n        this.guitar = new Guitar(this.updateLoadStatus('guitar'));\r\n        this.piano = new Piano(this.updateLoadStatus('piano'));\r\n        const sw = new Tone.StereoWidener(0.33);\r\n        const hsf = new Tone.Filter(200,'highshelf');\r\n        this.guitar.output.chain(hsf,sw,this.output);\r\n        this.piano.output.chain(hsf,sw,this.output);\r\n    }\r\n\r\n    updateLoadStatus(type) {\r\n        this.loadStatus[type] = true;\r\n        let loaded = true;\r\n        for(const t in this.loadStatus) {\r\n            loaded = this.loadStatus[t] && loaded;\r\n        }\r\n        this.setReady('melody', loaded);\r\n    }\r\n\r\n    updateInstrument() {\r\n        this.instrument = prob(0.5) ? this.guitar : this.piano;\r\n    }\r\n\r\n    async update(chordScales, progression, form) {\r\n        this.setParts('melody',false);\r\n        this.updateInstrument();\r\n\r\n        const scalePairs = [];\r\n        for(let i=0; i<chordScales.length; i+=2) {\r\n            scalePairs.push([chordScales[i][0],chordScales[i+1][0]]);\r\n        }\r\n        \r\n        const chords = progression.map(c => c.replace('m/ma7','mM7'));\r\n        const chordPairs = [];\r\n        for(let i=0; i<chords.length; i+=2) {\r\n            chordPairs.push([chords[i],chords[i+1]]);\r\n        }\r\n\r\n        const aProg = chordPairs[0];\r\n        const bProg = form[1] === 1 ? chordPairs[4] : chordPairs[8];\r\n        const cProg = chordPairs[12];\r\n        const progs = [aProg,bProg,cProg];\r\n        const seedProgs = form\r\n            .map(e => [e,e,e,e])\r\n            .reduce((a,b) => a.concat(b),[])\r\n            .map(e => progs[e]);\r\n\r\n        const aSeq = await vae.sample(1,0.9,{chordProgression: aProg},4,80);\r\n        const bSeq = await vae.sample(1,0.9,{chordProgression: bProg},4,80);\r\n        const cSeq = await vae.sample(1,0.9,{chordProgression: cProg},4,80);\r\n        const seqs = [aSeq,bSeq,cSeq];\r\n        const seedSeqs = form\r\n            .map(e => [e,e,e,e])\r\n            .reduce((a,b) => a.concat(b),[])\r\n            .map(e => seqs[e][0]);\r\n        \r\n        const twoBars = [];\r\n        for(let i=0; i<chordPairs.length; i++) {\r\n            const seedSeq = seedSeqs[i];\r\n            const seedProg = seedProgs[i];\r\n            const z = await vae.encode([seedSeq],{chordProgression: seedProg});\r\n            const res = (await vae.decode(z, 0.6, {chordProgression: chordPairs[i]},4,80))[0];\r\n            const correctedNotes = correct(res.notes,scalePairs[i]);\r\n            twoBars.push({...res, notes: correctedNotes});\r\n        }\r\n\r\n        const allBars = mm.sequences.concatenate(twoBars);\r\n        const formatted = format(allBars.notes);\r\n\r\n        this.melody = formatted;\r\n\r\n        this.updatePart();\r\n        this.setParts('melody',true);\r\n    }\r\n\r\n    updatePart() {\r\n        this.part.dispose();\r\n        this.part = new Tone.Part((time,value) => {\r\n            if(this.on) {\r\n                switch(this.voice) {\r\n                    case 0: {\r\n                        this.instrument.trigger(value.note,'1n',time); \r\n                        break;\r\n                    }\r\n                    case 1: {\r\n                        this.instrument.trigger(Note.transpose(value.note,'8P'),'1n',time);\r\n                        break;\r\n                    }\r\n                    case 2: {\r\n                        this.instrument.trigger(value.note,'1n',time);\r\n                        this.instrument.trigger(Note.transpose(value.note,'8P'),'1n',time);\r\n                        break;\r\n                    }\r\n                    default: break;\r\n                }\r\n            }\r\n        },this.melody).start(0);\r\n        this.part.loop = true;\r\n        this.part.loopStart = 0;\r\n        this.part.loopEnd = '32m';\r\n        this.part.humanize = true;\r\n    }\r\n}\r\n\r\nexport default MelodyController;","import * as Tone from 'tone';\r\nconst path = `${process.env.PUBLIC_URL}/Samples/Vinyl.wav`;\r\nconst vol = new Tone.Volume(-12);\r\n\r\nclass Vinyl {\r\n    constructor(cb) {\r\n        this.player = new Tone.Player(path, () => cb('vinyl',true));\r\n        this.player.loop = true;\r\n        this.output = new Tone.Gain(1);\r\n        this.player.chain(vol, this.output);\r\n    }\r\n\r\n    start = () => {\r\n        this.player.start(0);\r\n    }\r\n\r\n    stop = () => {\r\n        this.player.stop();\r\n    }\r\n}\r\n\r\nexport default Vinyl;","import * as Tone from 'tone';\r\nimport ProgressionGenerator from '../Progressions/ProgressionGenerator';\r\nimport BassController from './Basses';\r\nimport ChordController from './Chords';\r\nimport DrumController from './Drums';\r\nimport MelodyController from './Melody';\r\nimport Vinyl from '../Instruments/Vinyl/Vinyl';\r\nimport {prob, randEl} from '../Util/Util';\r\n\r\nTone.Context.lookAhead = 0.5;\r\nTone.Transport.bpm.value = 80;\r\nconst hpf = new Tone.Filter(28,'highpass');\r\nconst lpf = new Tone.Filter(6400,'lowpass');\r\n\r\nconst eq = new Tone.EQ3({\r\n    lowFrequency: 400,\r\n    highFrequency: 1600,\r\n    low: -1,\r\n    mid: 1,\r\n    high: -1,\r\n});\r\n\r\nclass Master {\r\n    constructor(setInstrumentsReady, setPartsReady) {\r\n        this.pg = new ProgressionGenerator();\r\n        this.setInstrumentsReady = setInstrumentsReady;\r\n        this.setPartsReady = setPartsReady;\r\n        this.instrumentsLoaded = false;\r\n        this.partsLoaded = false;\r\n        this.instrumentLoadStatus = {\r\n            chords: false,\r\n            melody: false,\r\n            drums: false,\r\n            vinyl: false,\r\n        };\r\n        this.partLoadStatus = {\r\n            drums: false,\r\n            melody: false,\r\n        }\r\n        this.updateInstrumentLoadStatus = (controller, ready) => {\r\n            this.instrumentLoadStatus[controller] = ready;\r\n            let instrumentsLoaded = true;\r\n            for(const controller in this.instrumentLoadStatus) {\r\n                instrumentsLoaded = instrumentsLoaded && this.instrumentLoadStatus[controller];\r\n            }\r\n            this.instrumentsLoaded = instrumentsLoaded;\r\n            if(this.instrumentsLoaded) {\r\n                this.chainControllerOutputs();\r\n                this.setInstrumentsReady(true);\r\n            }\r\n        }\r\n        this.updatePartLoadStatus = (controller, ready) => {\r\n            this.partLoadStatus[controller] = ready;\r\n            let partsLoaded = true;\r\n            for(const controller in this.partLoadStatus) {\r\n                partsLoaded = partsLoaded && this.partLoadStatus[controller];\r\n            }\r\n            this.partsLoaded = partsLoaded;\r\n            this.setPartsReady(this.partsLoaded);\r\n        }\r\n        this.output = new Tone.Gain(1).chain(eq,hpf,lpf);\r\n        this.output.toDestination();\r\n        this.bc = new BassController();\r\n        this.cc = new ChordController(this.updateInstrumentLoadStatus);\r\n        this.dc = new DrumController(this.updateInstrumentLoadStatus, this.updatePartLoadStatus);\r\n        this.mc = new MelodyController(this.updateInstrumentLoadStatus, this.updatePartLoadStatus);\r\n        this.vinyl = new Vinyl(this.updateInstrumentLoadStatus);\r\n\r\n        this.loop = new Tone.Loop((time) => {\r\n            this.bc.on = prob(0.70);\r\n            this.cc.on = true;\r\n            this.dc.on = prob(0.85);\r\n            this.mc.on = prob(0.85);\r\n            this.mc.voice = randEl([0,1,2]);\r\n            this.mc.updateInstrument();\r\n        },'8m').start(0);\r\n    }\r\n\r\n    chainControllerOutputs() {\r\n        this.bc.output.chain(this.output);\r\n        this.cc.output.chain(this.output);\r\n        this.dc.output.chain(this.output);\r\n        this.mc.output.chain(this.output);\r\n        this.vinyl.output.chain(this.output);\r\n    }\r\n\r\n    async generateSong() {\r\n        this.pg.generateProgression();\r\n        this.bc.update(this.pg.getRootsAndFifths(1));\r\n        this.cc.update(this.pg.getShellVoicings(3,true));\r\n        await Promise.all([\r\n            this.dc.update(),\r\n            this.mc.update(this.pg.getChordScales(),this.pg.chords,this.pg.form)\r\n        ]);\r\n    }\r\n\r\n    play() {\r\n        Tone.start();\r\n        this.vinyl.start();\r\n        Tone.Transport.start();\r\n    }\r\n\r\n    stop() {\r\n        this.vinyl.stop();\r\n        Tone.Transport.stop();\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Master;","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as Tone from 'tone';\r\n\r\nconst fft = new Tone.FFT(16);\r\n\r\nconst Visualizer = (props) => {\r\n\r\n    const [freqs,setFreqs] = useState([...fft.getValue()]);\r\n    const reqRef = useRef();\r\n\r\n    const animate = () => {\r\n        setFreqs([...fft.getValue()]);\r\n        reqRef.current = requestAnimationFrame(animate);\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.audio.connect(fft);\r\n        reqRef.current = requestAnimationFrame(animate);\r\n        return () => cancelAnimationFrame(reqRef.current);\r\n    });\r\n\r\n    return (\r\n        <div className=\"freqList\">\r\n            {freqs.map((v,i) => {\r\n\r\n                const height = Math.max(5.2*(52+0.52*v),10); \r\n                return(\r\n                    <div key={i}\r\n                        className=\"freqBar\"\r\n                        style={{\r\n                            height: `${height}px`,\r\n                        }}>\r\n                        \r\n                    </div>);\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Visualizer;","import React, {useState,useEffect,useRef} from 'react';\nimport './App.css';\nimport Master from './Controllers/Master';\nimport Visualizer from './Components/Visualizer'\n\nfunction App() {\n  const [instrumentsLoaded, setInstrumentsLoaded] = useState(false);\n  const [partsLoaded, setPartsLoaded] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [playing, setPlaying] = useState(false);\n  const [generatedFirst, setGeneratedFirst] = useState(false);\n\n  useEffect(() => {\n    setLoaded(instrumentsLoaded && partsLoaded);\n  },[instrumentsLoaded,partsLoaded]);\n\n  const master = useRef(null);\n\n  useEffect(() => {\n    master.current = new Master(setInstrumentsLoaded, setPartsLoaded);\n  },[]);\n\n  const togglePlaying = () => {\n    if(playing) {\n      master.current.stop();\n    } else {\n      master.current.play();\n    }\n    setPlaying(!playing);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>LOFI GENERATOR</h1>\n        <h3>by vin-huynh</h3>\n      </div>\n\n      <div className=\"colorBox\">\n        <div className=\"loadInfo\">\n          {loaded? '' : (generatedFirst? 'LOADING' : \n            <p className=\"generateFirst\">Click <b>{'>>'}</b> to Generate Your First Song!</p>)}</div>\n        <div className=\"visualizer\">\n          {loaded? <Visualizer audio={master.current.output}/> : '' }\n        </div>\n        <div className=\"gradient\"></div>\n      </div>\n\n      <div className=\"buttons\">\n        <button className=\"playBtn\"\n                disabled={!loaded}\n                onClick={() => togglePlaying()}>\n          <b>{playing? 'Stop' : 'Play'}</b>\n        </button>\n        <button className=\"nextBtn\"\n                disabled={!loaded && generatedFirst}\n                onClick={() => {\n                  setGeneratedFirst(true);\n                  master.current.stop();\n                  setPlaying(false);\n                  master.current.generateSong(); \n                  setLoaded(false);}}>\n          <b>{'>>'}</b>\n        </button>\n      </div>\n\n      <div className=\"instructions\">\n        <p>Click <b>{'>>'}</b> to generate a new song!</p>\n        <p>It may take a while, please be patient!</p>\n      </div>\n      \n      <section className=\"backdrop\"></section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './fonts/azukiB.ttf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}